JSP : java 언어를 기반으로 하는 Server Side 스크립트 언어이다.
      HTML코드에 Java 코드를 넣어 동적인 웹 페이지를 생성하는 웹 어플리케이션 도구이다.
      1.jsp를 통해 정적인 HTML과 동적으로 생성된 contents(Http 요청 파라미터)를 혼합하여 사용할 수 있다.

Servlet : 서블릿이란 동적 웹페이지를 만들 때 사용되는 자바 기반의 웹 애플리케이션 프로그래밍 기술이다.
           웹을 만들때는 다양한 요청과 응답이 있기 마련이고 여기에는 복잡한 규칙이 존재한다. 서블릿은 이러한 웹 요청과 응답의 흐름을
           간단한 메소드 호출만으로 체계적을 다룰 수 있게 해주는 기술이다.
           서블릿은 자바 클래스로 웹 애플리케이션을 작성한 뒤 이후 웹 서버 안에 있는 웹 컨테이너에서 이것을 실행하고,
           웹 컨테이너에서는 서블릿 인스턴스를 생성 후 서버에서 실행되다가 웹 브라우저에서 서버에 
           요청(Request)을 하면 요청에 맞는 동작을 수행하고 웹 브라우저에 HTTP형식으로 응답(Response)합니다. 

Request 객체 : 웹 브라우저와 같은 클라이언트로부터의 요청 정보를 담아 제공하는 객체. request HttpServletRequest 객체이며 JSP가
                   서블릿으로 변환되었을 때 요청을 처리하기 위해 실행되는 메소드인 _jspService() 메소드의 첫번째 파라미터로 넘어오게 된다.
	       이는 서블릿 클래스를 작성할 때 service() 메소드나 혹은 doGet(), doPost() 등의 첫번째 파라미터로 HttpServletRequest를
 	       받는것과 같다. 때문에 jsp 페이지의 스크립트릿에서 따로 선언하지 않아도 기본적으로 사용이 가능하다.

Response 객체 : 웹 브라우저의 요청에 응답하는 정보를 가지고 있는 객체. 서버측에서 클라이언트측으로 데이터를 전달하기 위한 객체이다.


모델 2 구조(MVC)

서블릿  -> 1. 요청을 받는다
로직클래스(로직+빈객체 = Model) -> 2. 요청을 분석  3. 요청을 처리하는 sERVICE 호출 후 결과 DATA를 반환 
                ->   4. View(JSP)를 지정 => 결과는 HTML 
                  --> Servlet이 받은 요청을 Model로 구현, JSP에 결과 DATA를 보낸 후 HTML로 Client에 응답한다.


MVC - Model : 요청처리를 하는 모든 클래스들을 말한다. (예: Data처리를 하는 Dao  등)
       - View : 요청처리 후 화면에 띄운다. (JSP)
       - Controller (Servlet) : 1. 데이터 받고 2. 데이터 분석 3. Model 찾고 Model 호출 -> 결과 반환
                         -> 결과 속성에 저장(request) 4. (포워딩) View에 전달
